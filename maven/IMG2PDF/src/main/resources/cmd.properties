execution.convert.start.parsed = Found %1$d folders in %2$s
execution.convert.start.parsing = Parsing folder list : %s
execution.convert.start.start_conversion = Start conversion progress
help=Getting more help information
img2pdf.convert.<sourceFiles>[0..*]=A text file(utf-8 encoding recommend) contains single/multiple folder path witch want to convert or merge into pdf
img2pdf.convert.filter=Image file name filter.Using glob expression.(default:${DEFAULT-VALUE})
img2pdf.convert.memory_max_usage = Max usage of memory.(default:${DEFAULT-VALUE})
img2pdf.convert.open_when_complete = Open PDF when conversion is completed.
img2pdf.convert.overwrite=Overwrite existing file.(default:${DEFAULT-VALUE})
img2pdf.convert.pdf_align = Alignment of page of pdf.(default:${DEFAULT-VALUE})
img2pdf.convert.pdf_auto_rotate=Auto rotate page of PDF when image is landscape.
img2pdf.convert.pdf_destination.0 = Destination of converted file.
img2pdf.convert.pdf_destination.1=\  It's able to specify auto-define value below:
img2pdf.convert.pdf_destination.2=\    - <NAME> : Name of folder path in directory list.\n
img2pdf.convert.pdf_destination.3=\    - <PARENT{N}> : Name of parent of <NAME> path.N represent N+1 level of <NAME>,start with 0.\n
img2pdf.convert.pdf_destination.4=\    - <ROOT> : Name of root folder of <NAME> path.\n
img2pdf.convert.pdf_destination.5=\    - <C[Y/M/D/H/N/S]> : Current day time.Y(Year),M(month),D(day),H(hour),N(minute),S(second)\n
img2pdf.convert.pdf_destination.6=\    - <C[Y/M/D/H/N/S]> : Modify day time of <NAME> folder.Y(Year),M(month),D(day),H(hour),N(minute),S(second)\n

img2pdf.convert.pdf_direction.0 = Image direction of each page of pdf.(default:${DEFAULT-VALUE})
img2pdf.convert.pdf_direction.1 = Available options: ${COMPLETION-CANDIDATES}
img2pdf.convert.pdf_owner_password = PDF owner password.
img2pdf.convert.pdf_permission.0=Access permission of document.(default:${DEFAULT-VALUE})
img2pdf.convert.pdf_permission.1=like linux chmod.This parameter should be a number which in range 0 to 255.
img2pdf.convert.pdf_permission.2=Each bit of this number represent enable(1) or disable(0).
img2pdf.convert.pdf_permission.3=CanAssembleDocument (Bit 7)\n\
CanExtractContent (Bit 6)\n\
CanExtractForAccessibility (Bit 5)\n\
CanFillInForm (Bit 4)\n\
CanModify (Bit 3)\n\
CanModifyAnnotations (Bit 2)\n\
CanPrint (Bit 1)\n\
CanPrintDegraded (Bit 0)
img2pdf.convert.pdf_size.0=Each page size of pdf.Type DEPEND_ON_IMG to set each page size depend on each image size.
img2pdf.convert.pdf_size.1 = Available options: ${COMPLETION-CANDIDATES}
img2pdf.convert.pdf_user_password = PDF user password.
img2pdf.convert.sorter.0 = Specify the sort pattern.(default:${DEFAULT-VALUE})
img2pdf.convert.sorter.1=Use "-" separate two parameter,"Sort Method - Sequence".\n\n\
Sort method:File name(NAME),numeric filename(NUMERIC),file modify time(DATE).\n\n\
Sequence:Power down(DECREASE),Power up(INCREASE)
img2pdf.convert.source = Source files.
img2pdf.convert.temp_folder = Temp files location.(default:${DEFAULT-VALUE})
img2pdf.convert.usage.header.0=Merge multiple images to a pdf file by executing this command.
img2pdf.convert.usage.header.1=before calling this command,it's required to create a text file(utf-8 encoding recommend) contains single/multiple folder path witch want to convert or merge into pdf.
img2pdf.debug = Open debug mode.
img2pdf.usage.header = This program can convert multiple image into pdf.
img2pdf.version = Print version information and exit.

public.exported = Exported
public.file.type.file = file
public.file.type.folder = folder
public.imported = Imported
public.importing = Importing
