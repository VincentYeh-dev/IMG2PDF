execution.convert.start.start_conversion = Start conversion!!!

handler.exception.conversion.conversion = Conversion error: %s
handler.exception.conversion.overwrite=Overwrite deny: %s
handler.exception.conversion.read_image=Image read error: %s
handler.exception.dirlist.not_found=Dirlist file not found: %s
handler.exception.dirlist.wrong_type=Path should be a %s,but was '%s': %s
handler.exception.source.overwrite=Overwrite deny: %s
handler.exception.source.empty_image = No image was found in %s.
handler.exception.source.not_found = Source file not found: %s
handler.exception.source.wrong_type = Path should be a %s,but was '%s': %s
handler.exception.missing_required.option = Missing required options: '%s'
handler.exception.missing_required.parameter = Missing required parameters: '%s'
handler.exception.try_help = "Try '%s --help' for more information.
handler.exception.type_convert.enum = Invalid value for %s '%s': expected one of [%s] (case-sensitive) but was '%s'
handler.exception.type_convert.normal = Invalid value for %s '%s': %s(invalid value)
handler.exception.unmatched_argument.unknown_option=Unknown options: %s

help = Getting more information

img2pdf.convert.<tasklist_sources>[0.*] = Tasklist path
img2pdf.convert.memory_max_usage = Max usage of memory.(default:${DEFAULT-VALUE})
img2pdf.convert.open_when_complete = Open PDF when conversion is completed.
img2pdf.convert.overwrite = Overwrite existing file.
img2pdf.convert.temp_folder = Temp files location.(default:${DEFAULT-VALUE})
img2pdf.convert.usage.header = Merge multiple images to pdf file by declared TaskList.
img2pdf.convert.<sourceFiles>[0..*] = Source file that contain several line of directory path.
img2pdf.convert.filter = Filter for image files.Using Regular expressions.(default:${DEFAULT-VALUE})
img2pdf.convert.list_destination = Output destination task list(*.XML).
img2pdf.convert.pdf_align = Alignment of page of pdf.(default:${DEFAULT-VALUE})
img2pdf.convert.pdf_auto_rotate = Auto rotate each page.
img2pdf.convert.pdf_destination = Destination of converted file.
img2pdf.convert.pdf_direction.0 = Image direction of each page of pdf.(default:${DEFAULT-VALUE})
img2pdf.convert.pdf_direction.1 = Available options: ${COMPLETION-CANDIDATES}
img2pdf.convert.pdf_owner_password = PDF owner password.
img2pdf.convert.pdf_permission = Access permission of document.default:${DEFAULT-VALUE}
img2pdf.convert.pdf_size.0 = Each page size of pdf.Type DEPEND to set each page size depend on each image size.
img2pdf.convert.pdf_size.1 = Available options: ${COMPLETION-CANDIDATES}img2pdf.convert.pdf_user_password = PDF user password.
img2pdf.convert.sorter = Specify the sort pattern.(default:${DEFAULT-VALUE})
img2pdf.convert.source = Source files.
img2pdf.debug = Open debug mode.
img2pdf.usage.header = This program can convert multiple image into pdf.
img2pdf.version = Print version information and exit.

public.file.type.file = file
public.file.type.folder = folder
public.exported = Exported
public.imported = Imported
public.importing = Importing
public.option = option
public.parameter = parameter
img2pdf.convert.pdf_user_password=PDF user password.


